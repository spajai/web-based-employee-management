 <h1>Data Manipulation</h1>
    <div id="jsGrid"></div>
    <div id="detailsDialog">
        <form id="detailsForm">
            <div class="details-form-field">
                <label for="username">Username</label>
                <input id="username" name="username" type="text" />
            </div>
            <div class="details-form-field">
                <label for="is_admin">Admin:</label>
                <select id="is_admin" name="is_admin">
                    <option value="">(Select)</option>
                    <option value="0">No</option>
                    <option value="1">Yes</option>
                </select>
            </div>
            <div class="details-form-field">
                <label for="gets_notifications">Get Notification:</label>
                <select id="gets_notifications" name="gets_notifications">
                    <option value="">(Select)</option>
                    <option value="0">No</option>
                    <option value="1">Yes</option>
                </select>
            </div>
            <div class="details-form-field">
                <label for="permissions">Permissions:</label>
                <select id="permissions" name="permissions">
                    <option value="">(Select)</option>
                    <option value="0">No</option>
                    <option value="1">Yes</option>
                </select>
            </div>

            <div class="details-form-field">
                <button type="submit" id="save">Save</button>
            </div>
        </form>
    </div>
<script>





(function() {

  // PNotify.alert('Notice me, senpai!');
// var notice = PNotify.notice({
  // title: 'Confirmation Needed',
  // text: 'Are you sure?',
  // icon: 'fas fa-question-circle',
  // hide: false,
  // stack: {
    // 'dir1': 'down',
    // 'modal': true,
    // 'firstpos1': 25
  // },
  // modules: {
    // Confirm: {
      // confirm: true
    // },
    // Buttons: {
      // closer: false,
      // sticker: false
    // },
    // History: {
      // history: false
    // },
  // }
// });
// notice.on('pnotify.confirm', function() {
  // alert('Ok, cool.');
// });
// notice.on('pnotify.cancel', function() {
  // alert('Oh ok. Chicken, I see.');
// });






    var db = {
        // insert_url: undef;
        loadData: function(filter) {
            return $.grep(this.clients, function(client) {
                
                return (!filter.username || !client.username || client.username.indexOf(filter.username) > -1)
                    && (!filter.is_admin || client.is_admin == filter.is_admin)
                    && (!filter.is_active || client.is_active == filter.is_active)
                    && (!filter.permissions || client.permissions == filter.permissions)
                    && (!filter.gets_notifications || client.gets_notifications == filter.gets_notifications);
            });
        },

        insertItem: function(insertingClient) {
            console.log(insertingClient);
//add on sucees push
            this.clients.push(insertingClient);
             $.ajax({
                type: "POST",
                url: "/api/v1/user",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(insertingClient),
                dataType: "JSON"
            });
            
            
        },

        updateItem: function(updatingClient) { 
                    console.log(updatingClient);
//add to common 
         $.ajax({
                type: "PUT",
                url: "/api/v1/user",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(updatingClient),
                dataType: "JSON"
            });
        
        
        },

        deleteItem: function(deletingClient) {
            var clientIndex = $.inArray(deletingClient, this.clients);
            this.clients.splice(clientIndex, 1);
//reload page
             var param = {
                "username": deletingClient.username,
                "id": deletingClient.id
            };
             $.ajax({
                type: "DELETE",
                url: "/api/v1/user",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(param),

                 error : function(xhr, textStatus, errorThrown) {
                noty({text: errorThrown, type: "error", layout: "topRight"});            },
                success:function(response){
                if(response){
                    // var map = {
                        // "1": "success",
                        // "-1": "warning",
                        // "0": "error"
                    // };
                    
                    //deprecate noty
                    // noty({text: response.message, type: map[response.result], layout: "topRight"});
                     alertify.set('notifier','position', 'top-right');
                     if(response.result == 1) {
                        alertify.success(response.message); 
                     }
                     if(response.result == 0 ) {
                        alertify.error(response.message); 
                     }
                     if(response.result == -1 ) {
                        alertify.warning(response.message); 
                     }

                   }
            }
            // complete: function() {

            // }
                
            });
            
            
        }

    };

    window.db = db;


    db.yesno = [
        { Name: "", Id: undefined},
        { Name: "No", Id: false },
        { Name: "Yes", Id: true },
    ];


    db.clients = [% result_set.data %];

}());


$(function() {
 
    $("#jsGrid").jsGrid({

        autoload: true,
        height: "100%",
        width: "100%",
        editing: true,
        paging: true,
        pageSize: 40,
        sorting: true,
        filtering: true,
        sorter: "string",

confirmDeleting: false,


        
        rowClass: function(item, itemIndex) {
            return item.is_active == 0 ? 'bg-red' : '';
        },
        
        rowClick: function(args) {
            if(args.item.is_active == 1){
                showDetailsDialog("Edit", args.item);
            }
            
        },
        controller: db,
        //dynamic
        fields: [
            { name: "username", type: "text", width: 150, title:"User Name" },
            { name: "is_admin", type: "select", items: db.yesno,title:"Is Admin", valueField: "Id", textField: "Name" },
            { name: "gets_notifications", title:"Gets Notification",type: "select", items: db.yesno, valueField: "Id", textField: "Name" },
            { name: "permissions", type: "select",title:"Permissions", items: db.yesno, valueField: "Id", textField: "Name" },
            { name: "is_active",title:"Active", type: "select", items: db.yesno, valueField: "Id", textField: "Name"
            },
            
            {
                type: "control",
                modeSwitchButton: false,
                editButton: false,
                itemTemplate: function(value, item) {
                var $result = $([]);
                if(item.is_active==1) {
                    $result = $result.add(this._createDeleteButton(item));
                }
                    return $result;
                },
                headerTemplate: function() {
                    return $("<button>").attr("type", "button").text("Add")
                    .on("click", function () {
                        showDetailsDialog("Add", {});
                    });
                }
            },
        ],
        onItemDeleting: function (args) {
            if (!args.item.deleteConfirmed) { // custom property for confirmation
                args.cancel = true; // cancel deleting
                alertify.confirm("The User \"" + args.item.username + "\" will be removed. Are you sure?",
                  function(){
                      args.item.deleteConfirmed = true;
                      $("#jsGrid").jsGrid('deleteItem', args.item); //call deleting once more in callback
              }).setHeader('<em> Confirm Delete </em>');
            }
        },
    });
 
    $("#detailsDialog").dialog({
        autoOpen: false,
        width: 400,
        close: function() {
            $("#detailsForm").validate().resetForm();
            $("#detailsForm").find(".error").removeClass("error");
        }
    });
 
    $("#detailsForm").validate({
       "rules": [% result_set.validation_profile.rules -%],
       "messages": [% result_set.validation_profile.messages -%],
    submitHandler: function() {
            formSubmitHandler();
        }
    });
    var formSubmitHandler = $.noop;
 
    var showDetailsDialog = function(dialogType, client) {
        $("#username").val(client.username);
        $("#is_admin").val(client.is_admin);
        $("#gets_notifications").val(client.gets_notifications);
        $("#permissions").val(client.permissions);
 
        formSubmitHandler = function() {
            saveClient(client, dialogType === "Add");
        };
 
        $("#detailsDialog").dialog("option", "title", dialogType + " Client")
                .dialog("open");
    };
 
    var saveClient = function(client, isNew) {
        $.extend(client, {
            username: $("#username").val(),
            is_admin: parseInt($("#is_admin").val(), 10),
            permissions: parseInt($("#permissions").val(), 10),
            gets_notifications: parseInt($("#gets_notifications").val(), 10),
        });
 
        $("#jsGrid").jsGrid(isNew ? "insertItem" : "updateItem", client);
 
        $("#detailsDialog").dialog("close");
    };
 
});

</script>